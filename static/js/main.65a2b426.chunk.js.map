{"version":3,"sources":["schema.js","components/Navigation.js","components/Home.js","constants.js","components/Chapters.js","components/Lessons.js","components/SingleLesson.js","components/NotFound.js","components/FilteredBooks.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["subjects","NavWithRouter","withRouter","history","useHistory","Schema","className","to","title","onChange","e","target","value","push","map","elt","key","id","name","HomeWithRouter","props","handleSubject","onSub","onClick","style","backgroundImage","url","client","ApolloClient","uri","POST_FILTERED_BOOKS","gql","POST_CHAPTERS","POST_LESSONSLIST","POST_LESSONS","ChaptersWithRouter","match","useRouteMatch","useState","chapters","setChapters","setTitle","useQuery","Constants","variables","params","bookId","data","error","loading","useEffect","viewer","hits","filterList","array","arrSort","sort","a","b","number","book","toString","chapter","subjectId","pointerEvents","valid","path","LessonsWithRouter","lessons","setLessons","subtitle","setSubTitle","chapterId","lessonList","page","getOnlyId","newArray","lesson","src","alt","display","lessonType","navArray","currentPage","parseInt","lastIndex","findIndex","document","getElementById","removeAttribute","lastId","setAttribute","nextIndex","length","nextId","SingleLessonWithRouter","lessonTitle","setLessonTitle","lessonId","firstArray","arr","filter","arrChildren","children","index","order","contentMd","content","dangerouslySetInnerHTML","__html","NotFound","FilteredBooksWithRouter","books","setBooks","booksList","displayTitle","Footer","App","subject","setSubject","exact","subId","component","Chapters","Lessons","SingleLesson","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.65a2b426.chunk.js","sourcesContent":["export const subjects = [\n  {\n    \"id\": 264,\n    \"name\": \"Géographie\",\n    \"url\": \"https://assets.lls.fr/subjects/geo.png\"\n  },\n  {\n    \"id\": 263,\n    \"name\": \"Histoire\",\n    \"url\": \"https://assets.lls.fr/subjects/hist.png\"\n  },\n  {\n    \"id\": 262,\n    \"name\": \"Français\",\n    \"url\": \"https://assets.lls.fr/subjects/fra.png\"\n  },\n  {\n    \"id\": 261,\n    \"name\": \"Histoire-Géographie\",\n    \"url\": \"https://assets.lls.fr/subjects/hist-geo.png\"\n  },     \n  {\n    \"id\": 276,\n    \"name\": \"Espagnol\",\n    \"url\": \"https://assets.lls.fr/subjects/esp.png\"\n  },\n  {\n    \"id\": 275,\n    \"name\": \"Sciences économiques et sociales\",\n    \"url\": \"https://assets.lls.fr/subjects/ses.png\"\n  },\n  {\n    \"id\": 274,\n    \"name\": \"Philosophie\",\n    \"url\": \"https://assets.lls.fr/subjects/philo.png\"\n  },\n  {\n    \"id\": 273,\n    \"name\": \"Physique-Chimie\",\n    \"url\": \"https://assets.lls.fr/subjects/physique.png\"\n  },\n  {\n    \"id\": 272,\n    \"name\": \"Anglais\",\n    \"url\": \"https://assets.lls.fr/subjects/anglais.png\"\n  },\n  {\n    \"id\": 271,\n    \"name\": \"Mathématiques\",\n    \"url\": \"https://assets.lls.fr/subjects/maths.png\"\n  },\n  {\n    \"id\": 270,\n    \"name\": \"Sciences de la vie et de la terre\",\n    \"url\": \"https://assets.lls.fr/subjects/svt.png\"\n  },\n  {\n    \"id\": 6066667,\n    \"name\": \"Enseignement scientifique\",\n    \"url\": \"https://assets.lls.fr/subjects/es.png\"\n  }\n];","import React from 'react';\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\nimport './navigation.css';\nimport * as Schema from './../schema';\n\nfunction Navigation() {\n\n  let history = useHistory();\n\n  function handleSubject(e) {\n    if (e.target.value !== \"Matières\") {\n      history.push(`/books/${e.target.value}`);\n    }\n  }\n\n  const subjects = Schema.subjects;\n\n  return (\n      <nav className=\"NavBar\">\n          <ul>\n            <li>\n              <Link to=\"/\" title=\"Accueil\"><i className=\"fas fa-bookmark\"></i> Le Livre Scolaire</Link>\n            </li>\n          </ul>\n\n          <div>\n              {\n                <select onChange={handleSubject}>      \n                  <option value=\"Matières\">Matières</option>\n                  {\n                    subjects.map((elt) => {\n                      return (\n                        <option key={elt.id} value={elt.id}>\n                          {elt.name}\n                        </option>\n                      )\n                    })\n                  }\n                </select>\n              } \n          </div>\n      </nav>\n  );\n}\n\n\nconst NavWithRouter = withRouter(Navigation);\nexport default NavWithRouter;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport * as Schema from './../schema';\nimport './home.css';\n\n\nfunction Home(props) {  \n    // for the exercice i only get few subjects from schema\n\n    function handleSubject(e) {\n        props.onSub(e.target.value);\n    }\n\n    const subjects = Schema.subjects;\n    \n    return (\n        <div className=\"home\">\n            <header className=\"home-header\">\n                <div className=\"Section-container\">\n                    <div className=\"title\">\n                        <i className=\"fas fa-bookmark\"></i>\n                        <h1>Bienvenue sur Le Livre Scolaire</h1>\n                    </div>\n\n                    <div className=\"home-content\">\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla tempor mi et dui condimentum mollis. \n                            Duis varius, ante ut semper tempor, leo velit suscipit ligula, vel condimentum ipsum velit et magna. \n                            Aliquam erat volutpat. Integer enim nulla, tempor a pellentesque ac, convallis ut libero. \n                            Maecenas malesuada lacus orci, eu ornare purus faucibus id. Sed fringilla malesuada consectetur.</p>\n                    </div>\n                </div>\n\n            </header>\n            \n            <div>\n                <div className=\"Section-container\">\n                    <h3>Choississez votre matière ?</h3>\n                    {\n                        <ul>\n                            {\n                                subjects.map((elt) => {\n                                    return (\n                                        <Link to={`/books/${elt.id}`} key={elt.id} >\n                                            <li key={elt.id} value={elt.id} onClick={handleSubject} style={{ backgroundImage: `url(${elt.url})` }}>{elt.name}</li>\n                                        </Link>\n                                    )\n                                })\n                            }\n                        </ul>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n};\n\nconst HomeWithRouter = withRouter(Home);\nexport default HomeWithRouter;","import ApolloClient from 'apollo-boost';\nimport { gql } from 'apollo-boost';\n\n\nexport const client = new ApolloClient({\n  uri: \"https://api-dev.lelivrescolaire.fr/graphql\"\n});\n \n\nexport const POST_BOOKS = gql`\n    query ($id: [Int]) {\n        viewer {\n            books (ids: $id) {\n                hits {\n                    id\n                    displayTitle\n                    url\n                    subjects {\n                        id\n                        name\n                    }\n                    levels {\n                        name\n                    }\n                }\n            }\n        }\n    }`\n;\n\nexport const POST_FILTERED_BOOKS = gql`\n    query ($id: [Int]) {\n        viewer {\n            books (subjectIds: $id) {\n                hits {\n                    id\n                    displayTitle\n                    url\n                    subjects {\n                        id\n                        name\n                        url\n                    }\n                    levels {\n                        name\n                    }\n                }\n            }\n        }\n    }`\n;\n\n\nexport const POST_CHAPTERS = gql`\n    query ($id: [Int]) {\n        viewer {\n            chapters (bookIds: $id) {\n                hits {\n                    title\n                    id\n                    valid\n                    url\n                    book {\n                        title\n                        id\n                    }\n                    number\n                }\n            }\n        }\n    }`\n;\n\n\nexport const POST_LESSONSLIST = gql`\n    query ($id: [Int]) {\n        viewer {\n            lessons (chapterIds: $id) {\n                hits {\n                    id\n                    title\n                    page\n                    lessonType\n                    valid\n                    url\n                    chapter {\n                        id\n                        title\n                        book {\n                            id\n                            title\n                            chapters {\n                                id\n                                number\n                                valid\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }`\n;\n\n\nexport const POST_LESSONS = gql`\n    query ($id: [Int]) {\n        viewer {\n            lessons (chapterIds: $id) {\n                hits {\n                    id\n                    title\n                    page\n                    valid\n                    children {\n                        id\n                        type\n                        title\n                        order\n                        content\n                        url\n                        poster\n                        creditPoster\n                        index\n                        contentMd\n                        assets\n                    }\n                    chapter {\n                        id\n                        title\n                        book {\n                            id\n                            title\n                        }\n                    }\n                }\n            }\n        }\n    }`\n;\n\n\nexport const POST_SUBJECTS = gql`\n    query {\n        viewer {\n            subjects {\n                hits {\n                    id\n                    name\n                }\n            }\n        }\n    }`\n;","import React, { useState, useEffect } from 'react';\nimport { useQuery } from 'react-apollo';\nimport * as Constants from './../constants';\nimport { Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport './chapters.css';\n\n\nfunction Chapters() {\n    const match = useRouteMatch();\n    const history = useHistory();\n    const [chapters, setChapters] = useState([]);\n    const [title, setTitle] = useState('');\n\n    const { data, error, loading } = useQuery(Constants.POST_CHAPTERS, { \n        variables:  {id: `${match.params.bookId}`}\n    });\n\n    useEffect(() => {\n        if (data) {\n            const chapters = data.viewer.chapters.hits\n            filterList(chapters);\n        }\n    });\n\n    const filterList = (array) => {\n        if (array) {\n            let arrSort = array.sort((a, b) => {\n                return a.number - b.number;\n            });\n            setChapters(arrSort);\n            arrSort[0] ? setTitle(arrSort[0].book.title) : setTitle('');\n        }\n    };\n\n    if (loading) return <div>Chargement...</div>;\n    if (error) return <div>Erreur : {error.toString()}</div>;\n\n    const redirectToChapters = () => {\n        const path = `/books/${match.params.subjectId}/`;\n        history.push(path);\n    }\n\n\n    return (\n        <div className=\"chapter-main\">\n            <div className=\"Section-container\">\n                <div className=\"chapters-title\">\n                    <h3>{title}</h3>\n                    <h4>Chapitres</h4>\n                </div>\n\n                <div className=\"chapters\">\n                    {\n                        chapters.map((chapter) =>  \n                            <Link to={`/${match.params.subjectId}/${match.params.bookId}/chapter/${chapter.id}`} key={chapter.id} style={{pointerEvents : chapter.valid ? '' : 'none'}}>\n                                <div key={chapter.id} style={{ backgroundImage: `url(${chapter.url})` }} className={chapter.valid === false ? 'chapter-false' : 'chapter-elt'}>\n                                    <div className=\"chapter-number\">\n                                        <p>{chapter.number}</p>\n                                    </div>\n\n                                    <div className={chapter.valid === false ? 'chapter-title-false' : 'chapter-title'}>\n                                        <h5>{chapter.title}</h5>\n                                    </div>\n                                </div>\n                            </Link>\n                        )\n                    }\n                </div>\n\n                <div className=\"chapter-nav\">\n                    <button onClick={redirectToChapters} title=\"Liste des livres\"><i className=\"fas fa-th\"></i></button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nconst ChaptersWithRouter = withRouter(Chapters);\nexport default ChaptersWithRouter;","import React, { useState, useEffect } from 'react';\nimport { useQuery } from 'react-apollo';\nimport * as Constants from './../constants';\nimport { withRouter, Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport \"./lessons.css\";\n\n\nfunction Lessons() {\n    const match = useRouteMatch();\n    const history = useHistory();\n    const [lessons, setLessons] = useState([]);\n    const [chapters, setChapters] = useState('');\n    const [title, setTitle] = useState('');\n    const [subtitle, setSubTitle] = useState('');\n\n    const { data, error, loading } = useQuery(Constants.POST_LESSONSLIST, { \n        variables:  {id: `${[match.params.chapterId]}`},\n    });\n    \n    useEffect(() => {\n        if (data) {\n            const lessonList = data.viewer.lessons.hits;\n            filterList(lessonList);\n        }\n        \n    });\n\n    const filterList = (array) => {\n        setChapters(array[0].chapter.book.chapters);\n        let arrSort = array.sort((a, b) => {\n            return a.page - b.page;\n        });\n        setLessons(arrSort);\n        setTitle(arrSort[0].chapter.book.title);\n        setSubTitle(arrSort[0].chapter.title);\n    };\n\n    if (loading) return <div>Chargement...</div>;\n    if (error) return <div>Erreur : {error.toString()}</div>;\n\n    const redirectToChapters = () => {\n        const path = `/${match.params.subjectId}/book/${match.params.bookId}`;\n        history.push(path);\n    }\n\n    const getOnlyId = (array, newArray) => {\n        array.sort((a, b) => {\n            return a.number - b.number;\n        });\n        array.map((elt) => elt.valid ? newArray.push(elt.id) : '');\n        return newArray;\n    }\n\n    const next = () => {\n        let navArray = []\n        getOnlyId(chapters, navArray);\n        \n        const currentPage = parseInt(match.params.chapterId);\n        const currentIndex = (elt) => elt === currentPage;\n        const nextIndex = navArray.findIndex(currentIndex) + 1;\n\n        const btnBack = document.getElementById(\"back-chapter\");\n        btnBack.removeAttribute(\"disabled\");\n\n        if (nextIndex < navArray.length) {\n            const nextId = navArray[nextIndex];\n            const path = `/${match.params.subjectId}/${match.params.bookId}/chapter/${nextId}`;\n            history.push(path);\n        } \n        if (nextIndex === navArray.length - 1) {\n            const btnNext = document.getElementById(\"next-chapter\");\n            btnNext.setAttribute(\"disabled\", \"\");\n        }\n    }\n\n    const back = () => {\n        let navArray = []\n        getOnlyId(chapters, navArray);\n        \n        const currentPage = parseInt(match.params.chapterId);\n        const currentIndex = (elt) => elt === currentPage;\n        const lastIndex = navArray.findIndex(currentIndex) - 1;\n\n        const btnNext = document.getElementById(\"next-chapter\");\n        btnNext.removeAttribute(\"disabled\");\n\n        if (lastIndex >= 0) {\n            const lastId = navArray[lastIndex];\n            const path = `/${match.params.subjectId}/${match.params.bookId}/chapter/${lastId}`;\n            history.push(path);\n            if (lastIndex === 0) {\n                const btnBack = document.getElementById(\"back-chapter\");\n                btnBack.setAttribute(\"disabled\", \"\");\n            }\n        } \n    }\n\n\n    return (\n        <div className=\"index-main\">\n            <div className=\"Section-container\">\n                <div className=\"index-container\">\n                    <div className=\"index-title\">\n                        <h3>{title}</h3>\n                        <h4>{subtitle}</h4>\n                    </div>\n\n                    <hr />\n\n                        <ul>\n                            {\n                                lessons.map((lesson) =>  \n                                    <li key={lesson.id} className={lesson.valid === false ? 'index-link-false' : 'index-link'}>\n                                        <Link to={`/${match.params.subjectId}/${match.params.bookId}/${match.params.chapterId}/lesson/${lesson.id}`} style={{pointerEvents : lesson.valid ? '' : 'none'}}>\n                                            <div className=\"index-info\">\n                                                <div className=\"index-img\">\n                                                    { lesson.url ? <img src={lesson.url} alt=\"lesson.title\" /> : '' }\n                                                </div>\n\n                                                <div className=\"index-info-title\">\n                                                    <h5>{lesson.title}</h5>\n                                                    <p style={{display : lesson.lessonType !== null ? 'block' : 'none'}}>{ lesson.lessonType }</p>\n                                                </div>\n                                            </div>\n\n                                            <p>{lesson.page}</p>\n                                        </Link>\n                                    </li>\n                                )\n                            }\n                        </ul>\n                </div>\n\n                <div className=\"index-nav\">\n                    <button onClick={back} id=\"back-chapter\" title=\"Précédent\"><i className=\"fas fa-chevron-circle-left\"></i></button>\n                    <button onClick={redirectToChapters} title=\"Chapitres\"><i className=\"fas fa-book\"></i></button>\n                    <button onClick={next} id=\"next-chapter\" title=\"Suivant\"><i className=\"fas fa-chevron-circle-right\"></i></button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst LessonsWithRouter = withRouter(Lessons);\nexport default LessonsWithRouter;","import React, { useState, useEffect } from 'react';\nimport { useQuery } from 'react-apollo';\nimport * as Constants from './../constants';\nimport { withRouter, useRouteMatch, useHistory } from \"react-router-dom\";\nimport './singleLesson.css';\n\n\nfunction SingleLesson() {\n    const match = useRouteMatch();\n    const history = useHistory();\n    const [lessons, setLessons] = useState([]);\n    const [chapters, setChapters] = useState('');\n    const [title, setTitle] = useState('');\n    const [subtitle, setSubTitle] = useState('');\n    const [lessonTitle, setLessonTitle] = useState('');\n    let id = parseInt(match.params.lessonId);\n\n    const { data, error, loading } = useQuery(Constants.POST_LESSONS, { \n        variables:  {id: `${[match.params.chapterId]}`}\n    });\n\n    useEffect(() => {\n        if (data) {\n            const lessonList = data.viewer.lessons.hits;\n            filterList(lessonList);\n        }\n    });\n\n    const filterList = (array) => {\n        let firstArray = array.sort((a, b) => {\n            return a.page - b.page;\n        });\n        setChapters(firstArray);\n\n        let arr = firstArray.filter(elt => elt.id === id);\n        let arrChildren = arr[0].children;\n        arrChildren.map((elt, index) => !elt ? arrChildren[index] = {order: index, contentMd: null, content: null} : arrChildren[index] = elt);\n        arrChildren.map((elt) => elt.content === null ? elt.content = '' : elt);\n        arrChildren.map((elt) => elt.contentMd === null ? elt.contentMd = '' : elt);\n        let arrSort = arrChildren.sort((a, b) => {\n            return a.order - b.order;\n        });\n        setLessons(arrSort);\n        setTitle(firstArray[0].chapter.book.title);\n        setSubTitle(firstArray[0].chapter.title);\n        setLessonTitle(arr[0].title);\n    };\n\n    if (loading) return <div>Chargement...</div>;\n    if (error) return <div>Erreur : {error.toString()}</div>;\n\n\n    const redirectToChapters = () => {\n        const path = `/${match.params.subjectId}/book/${match.params.bookId}`;\n        history.push(path);\n    }\n\n    const redirectToLessons = () => {\n        const path = `/${match.params.subjectId}/${match.params.bookId}/chapter/${match.params.chapterId}`;\n        history.push(path);\n    }\n\n    const getOnlyId = (array, newArray) => {\n        array.map((elt) => elt.valid ? newArray.push(elt.id) : '');\n        return newArray;\n    }\n\n    const next = () => {\n        let navArray = []\n        getOnlyId(chapters, navArray);\n        \n        const currentPage = parseInt(match.params.lessonId);\n        const currentIndex = (elt) => elt === currentPage;\n        const nextIndex = navArray.findIndex(currentIndex) + 1;\n\n        const btnBack = document.getElementById(\"back\");\n        btnBack.removeAttribute(\"disabled\");\n\n        if (nextIndex < navArray.length) {\n            const nextId = navArray[nextIndex];\n            const path = `/${match.params.subjectId}/${match.params.bookId}/${match.params.chapterId}/lesson/${nextId}`;\n            history.push(path);\n        } \n        if (nextIndex === navArray.length - 1) {\n            const btnNext = document.getElementById(\"next\");\n            btnNext.setAttribute(\"disabled\", \"\");\n        }\n    }\n\n    const back = () => {\n        let navArray = []\n        getOnlyId(chapters, navArray);\n        \n        const currentPage = parseInt(match.params.lessonId);\n        const currentIndex = (elt) => elt === currentPage;\n        const lastIndex = navArray.findIndex(currentIndex) - 1;\n\n        const btnNext = document.getElementById(\"next\");\n        btnNext.removeAttribute(\"disabled\");\n\n        if (lastIndex >= 0) {\n            const lastId = navArray[lastIndex];\n            const path = `/${match.params.subjectId}/${match.params.bookId}/${match.params.chapterId}/lesson/${lastId}`;\n            history.push(path);\n            if (lastIndex === 0) {\n                const btnBack = document.getElementById(\"back\");\n                btnBack.setAttribute(\"disabled\", \"\");\n            }\n        } \n    }\n\n    \n    return (\n        <div className=\"lesson-main\">\n            <div className=\"Section-container\">\n                <div className=\"lesson-content\">\n                    <div className=\"lesson-title\">\n                        <h3>{title}</h3>\n                        <h4>{subtitle}</h4>\n                        <h5>{lessonTitle}</h5>\n                    </div>\n                    <hr />\n\n                    {\n                        lessons.map((elt, index) => \n                            elt.content ?\n                                <div key={index} dangerouslySetInnerHTML={{ __html: `${elt.content}` }} /> \n                                : <div key={index} dangerouslySetInnerHTML={{ __html: `${elt.contentMd}` }} />\n                        )\n                    }\n                </div>\n\n                <div className=\"lesson-nav\">\n                    <button onClick={back} id=\"back\" title=\"Précédent\"><i className=\"fas fa-chevron-circle-left\"></i></button>\n                    <button onClick={redirectToChapters} title=\"Chapitres\"><i className=\"fas fa-book\"></i></button>\n                    <button onClick={redirectToLessons} title=\"Leçons\"><i className=\"fas fa-list-alt\"></i></button>\n                    <button onClick={next} id=\"next\" title=\"Suivant\"><i className=\"fas fa-chevron-circle-right\"></i></button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nconst SingleLessonWithRouter = withRouter(SingleLesson);\nexport default SingleLessonWithRouter;","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <h2>Page not found</h2>\n    );\n}\n\nexport default NotFound;","import React, { useState, useEffect } from 'react';\nimport { useQuery } from 'react-apollo';\nimport * as Constants from './../constants';\nimport { withRouter, Link, useRouteMatch } from \"react-router-dom\";\nimport \"./filteredBooks.css\";\n\nfunction FilteredBooks() {\n    const match = useRouteMatch();\n    const [books, setBooks] = useState([]);\n    const [title, setTitle] = useState('');\n    \n    const { data, error, loading } = useQuery(Constants.POST_FILTERED_BOOKS, { \n        variables:  {id: match.params.subjectId}\n    });\n    \n    useEffect(() => {  \n        if (data) {\n            const booksList = data.viewer.books.hits;\n            setBooks(booksList);\n            setTitle(booksList[0].subjects[0].name);\n        }\n    }, [data]);\n\n\n    if (loading) return <div>Chargement...</div>;\n    if (error) return <div>Erreur : {error.toString()}</div>;\n\n\n    return (\n        <div className=\"books-main\">\n            <div className=\"Section-container\">\n                <div className=\"books-title\">\n                    <h3>{title}</h3>\n                </div>\n\n                <div className=\"books\">\n                    {\n                        books.map((book) =>  (book.displayTitle !== null && book.url !== null) ? \n                            <div key={book.id} className=\"book\">\n                                <div>\n                                    <Link to={`/${match.params.subjectId}/book/${book.id}`}>\n                                        <div className=\"title\">\n                                            <h3>{book.displayTitle}</h3>\n                                        </div>\n\n                                        <div className=\"cover\">\n                                            { book.url != null ? <img src={book.url} alt={book.title} /> : <p>Image indisponible</p>}\n                                        </div>\n                                    </Link>\n                                </div>\n                            </div> : ''\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nconst FilteredBooksWithRouter = withRouter(FilteredBooks);\nexport default FilteredBooksWithRouter;","import React from 'react';\nimport \"./footer.css\";\n\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <h2>Hugo Prea - 2020</h2>\n        </footer>\n    )\n\n}\n\nexport default Footer;","import React, { useState }  from 'react';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport { ApolloProvider } from 'react-apollo';\nimport './App.css';\nimport Navigation from './components/Navigation';\nimport Home from './components/Home';\nimport Chapters from './components/Chapters';\nimport Lessons from './components/Lessons';\nimport SingleLesson from './components/SingleLesson';\nimport * as Constants from './constants';\nimport NotFound from './components/NotFound';\nimport FilteredBooks from './components/FilteredBooks';\nimport Footer from './components/Footer';\n\n\nfunction App() {\n    const [subject, setSubject] = useState('');\n\n    function handleSubject(value) {\n        setSubject(value);\n    }\n\n    return (\n      <ApolloProvider client={Constants.client}>\n        <div className=\"App\">\n          <Router>  \n            <Navigation />\n  \n            <Switch>\n              <Route exact path=\"/\">\n                <Home onSub={handleSubject} />\n              </Route>\n              <Route path=\"/books/:subjectId\">\n                <FilteredBooks subId={subject}/>\n              </Route>\n              <Route path=\"/:subjectId/book/:bookId\" component={Chapters} />\n              <Route path=\"/:subjectId/:bookId/chapter/:chapterId\" component={Lessons} />\n              <Route path=\"/:subjectId/:bookId/:chapterId/lesson/:lessonId\" component={SingleLesson}/>\n              <Route component={NotFound}/>\n            </Switch>\n          </Router>\n        </div>\n\n        <Footer />\n      </ApolloProvider>\n    );\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}